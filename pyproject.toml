[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "alteruphono"
dynamic = ["version"]
description = "Advanced phonological evolution modeling for historical linguistics"
authors = [
    {name = "Tiago Tresoldi", email = "tiago.tresoldi@lingfil.uu.se"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = [
    "sound change", 
    "phonology", 
    "historical linguistics", 
    "comparative method", 
    "phonological features", 
    "language evolution"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "arpeggio"
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "black",
    "flake8",
    "mypy",
    "hypothesis",
    "jupyter",
    "nbconvert",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "myst-parser",
]
visualization = [
    "matplotlib",
    "seaborn",
    "plotly",
    "networkx",
    "pandas",
    "numpy",
    "scipy",
]
ml = [
    "numpy",
    "scipy",
    "scikit-learn",
    "pandas",
]

[project.urls]
Homepage = "https://github.com/tresoldi/alteruphono"
Documentation = "https://github.com/tresoldi/alteruphono/docs"
Repository = "https://github.com/tresoldi/alteruphono"
"Bug Tracker" = "https://github.com/tresoldi/alteruphono/issues"

[project.scripts]
alteruphono = "alteruphono.__main__:main"

[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.packages.find]
include = ["alteruphono*", "resources*"]

[tool.setuptools.dynamic]
version = {attr = "alteruphono.__version__"}

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["alteruphono"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | env
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["alteruphono"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "arpeggio.*",
]
ignore_missing_imports = true